// Default Ionic Colors

/* General Container Styles */
#container {
  text-align: center;
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}

/* Text and Font Styles */
#container strong {
  font-size: 20px;
  line-height: 26px;
}

#container a {
  text-decoration: none;
}

.homeText, .footer, .paragraph, ion-button, .config {
  font-family: 'Futura', sans-serif;
}

.mainHomeText, #contentTable th, #contentTable td {
  font-family: 'Futura-Bold', sans-serif;
}

/* Header Image */
.headerImage {
  height: 1em;
}

/* Button Styles */
.menuButton, .backButton, .forwardButton {
  color: rgb(255, 255, 255);
}

.backButton, .forwardButton {
  font-size: 18px;
  margin: 0;
  padding: 0;
  color: var(--ion-button-color);
}

ion-button {
  text-transform: none;
  font-size: 17px;
}

/* Text Styles */
.menuText, .item.text {
  cursor: pointer;
}

.itemDescription {
  cursor: default;
}

.homeText {
  text-align: center;
  font-size: 22px;
  margin-top: 0;
  padding-top: 0.5em;
  padding-left: 2em;
  padding-right: 2em;
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none;
}

.footer {
  text-align: center;
  font-size: 14px;
  color: rgb(255, 255, 255);
}

.paragraph {
  font-size: 19px;
}

.mainHomeText {
  font-size: 30px;
}

/* Navigation Styles */
.nav-container {
  display: flex;
  justify-content: space-between; /* Space between breadcrumb and buttons */
  align-items: center; /* Align items vertically */
  position: relative; /* Ensure relative positioning */
}

.navButtons {
  margin: 0;
  max-width: 15%;
  width: 112px; /* Ensure the width is fixed */
  border-radius: 0em 5em 5em 0em;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center; /* Align items vertically */
}

.breadcrumb {
  font-family: Futura;
  color: var(--text-color);
  /* Position breadcrumb to the right */
  position: absolute;
  right: 1em; 
  top: 50%; /* Align vertically */
  transform: translateY(-50%); /* Center vertically */
  display: flex;
  align-items: center;

  //This part of the code is for a optional scrollable breadcrumb(not finished)

  overflow-x: auto; /* Enable horizontal scrolling */
  white-space: nowrap; /* Prevent items from wrapping to the next line */
  max-width: 85%; /* Limit the width to 55% of the screen */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  padding-top: 3em;
  padding-bottom: 3em;
}

//Optional code for making the breadcrumb scrollbar hidden
.breadcrumb::-webkit-scrollbar{
  display: none;
}

.breadcrumb span {
  margin-right: 0.5em;
  color: var(--text-color);
  display: inline-block;
  cursor: pointer;
}

.breadcrumb-separator {
  margin-right: 0.5em;
  color: var(--text-color);
  display: inline-block;
  cursor: default;
}

.breadcrumb-wrapper {
  max-width: 55%; /* Ensure wrapper doesn't extend beyond 55% of the screen */
  overflow: hidden; /* Hide overflow content */
}

/* Search Bar Styles */
.searchBar {
  color: var(--ion-button-color); /* Use button color for text */
  background-color: var(--ion-background-color); /* Use background color */
  font-size: 16px; /* Adjusted for better readability */
  height: 40px; /* Adjust height to fit the border */
  font-family: Futura;
  border: 3px solid var(--text-color); /* 3px solid border */
  border-radius: 5px; /* Optional: add rounded corners */
}

.search-bar-container {
  margin: 1em 0;
  margin-right: 1.5em;
  position: absolute; /* Position it absolutely to the nearest positioned ancestor */
  right: 0; /* Align it to the right side of the screen */
  top: 3em; /* Increase the top value to move it down */
  z-index: 10; /* Ensure it appears above other content */
}

.search-bar-container input {
  width: 100%;
  font-size: 16px;
}

.search-bar-container input::placeholder {
  color: var(--text-color); /* Change placeholder text color to red */
}

.errorMessage {
  text-align: center;
  font-size: 20px;
  font-family: 'Futura';
}

ion-toggle {
  --track-background: #ababab;
  --track-background-checked: #ddd;

  --handle-background: var(--ion-color-primary);
  --handle-background-checked: var(--ion-color-primary-shade);
  --handle-width: 25px;
  --handle-height: 27px;
  --handle-max-height: auto;
  --handle-spacing: 6px;

  --handle-border-radius: 4px;
  --handle-box-shadow: none;
}

ion-toggle::part(track) {
  height: 10px;
  width: 65px;
  overflow: visible; /* Required for iOS handle to overflow the height of the track */
}

ion-toggle .toggle-icon {
  display: none; /* Hide default icons if needed */
}
